var _interopRequireWildcard=require("@babel/runtime/helpers/interopRequireWildcard");var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");var _defineProperty2=_interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));var _regenerator=_interopRequireDefault(require("@babel/runtime/regenerator"));var path=_interopRequireWildcard(require("path"));var cp=_interopRequireWildcard(require("child_process"));var _express=_interopRequireDefault(require("express"));var _cors=_interopRequireDefault(require("cors"));var _bcryptjs=_interopRequireDefault(require("bcryptjs"));var _bodyParser=_interopRequireDefault(require("body-parser"));var _FolderSongs=_interopRequireDefault(require("../../src/FolderSongs"));var _FolderExtras=_interopRequireDefault(require("../../src/FolderExtras"));var _lowdb=_interopRequireDefault(require("lowdb"));var _FileSync=_interopRequireDefault(require("lowdb/adapters/FileSync"));var _jsonwebtoken=_interopRequireDefault(require("jsonwebtoken"));var _gmailSend=_interopRequireDefault(require("gmail-send"));var _cryptoRandomString=_interopRequireDefault(require("crypto-random-string"));var _chokidar=_interopRequireDefault(require("chokidar"));if(!process.env.NODE_ENV){throw new Error('Establecer un valor para NODE_ENV');}if(!process.env.PORT){throw new Error('Establecer un valor para PORT');}var mailSender=(0,_gmailSend.default)({user:'javier.alejandro.castro@gmail.com',pass:process.env.GMAIL_PASSWORD,subject:'iResucito Web'});var merge=require('deepmerge');var dataPath=path.resolve(process.cwd(),'../data');var syncScriptPath=path.resolve(process.cwd(),'../server');_FolderSongs.default.basePath=path.resolve(process.cwd(),'../../songs');_FolderExtras.default.basePath=dataPath;var adapter=new _FileSync.default(path.join(dataPath,'db.json'));var db=(0,_lowdb.default)(adapter);db.defaults({users:[],tokens:[]}).write();var watcher=_chokidar.default.watch(dataPath,{persistent:true,ignoreInitial:true});watcher.on('add',function(path){cp.spawn('node',['./syncData.js','up',path],{cwd:syncScriptPath});}).on('change',function(path){cp.spawn('node',['./syncData.js','up',path],{cwd:syncScriptPath});});function readLocalePatch(){var exists,patchJSON;return _regenerator.default.async(function readLocalePatch$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return _regenerator.default.awrap(_FolderExtras.default.patchExists());case 2:exists=_context.sent;if(!exists){_context.next=8;break;}_context.next=6;return _regenerator.default.awrap(_FolderExtras.default.readPatch());case 6:patchJSON=_context.sent;return _context.abrupt("return",JSON.parse(patchJSON));case 8:case"end":return _context.stop();}}});}function saveLocalePatch(patchObj){var json;return _regenerator.default.async(function saveLocalePatch$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:json=JSON.stringify(patchObj,null,' ');_context2.next=3;return _regenerator.default.awrap(_FolderExtras.default.savePatch(json));case 3:case"end":return _context2.stop();}}});}var server=(0,_express.default)();server.use(_bodyParser.default.json());server.use((0,_cors.default)());var webClientFolder=path.resolve('../dist');server.use(_express.default.static(webClientFolder));server.get('/',function(req,res){res.sendFile(path.join(webClientFolder,'index.html'));});var jwtSecretKey='mysuperSecretKEY';var domain='http://iresucito.herokuapp.com';server.use(function _callee(req,res,next){var authorization,token,payload,user;return _regenerator.default.async(function _callee$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:authorization=req.headers.authorization;if(!authorization){_context3.next=13;break;}_context3.prev=2;token=authorization.split(' ')[1];_context3.next=6;return _regenerator.default.awrap(_jsonwebtoken.default.verify(token,jwtSecretKey));case 6:payload=_context3.sent;if(payload){user=db.get('users').find({email:payload.email}).value();req.user=user;}_context3.next=13;break;case 10:_context3.prev=10;_context3.t0=_context3["catch"](2);console.log(_context3.t0);case 13:next();case 14:case"end":return _context3.stop();}}},null,null,[[2,10]]);});server.post('/api/signup',function(req,res){var _req$body=req.body,email=_req$body.email,password=_req$body.password;if(!email||!password){return res.status(500).json({error:'Provide an email and password to register'});}var exists=db.get('users').find({email:email}).value();if(exists){return res.status(500).json({error:"Email "+email+" already registered!"});}try{var hash=_bcryptjs.default.hashSync(password,_bcryptjs.default.genSaltSync(10));db.get('users').push({email:email,password:hash,isVerified:false}).write();var token=(0,_cryptoRandomString.default)({length:20,type:'url-safe'});db.get('tokens').push({email:email,token:token}).write();mailSender({to:email,text:"Navigate this link "+domain+"/api/verify/"+token+"/"+email+" to activate your account."},function(err,res){console.log({mailSend:{err:err,res:res}});});return res.status(200).json({ok:"User registered. \nOpen your inbox and activate your account \nwith the email we've just sent to you!"});}catch(err){console.log({err:err});return res.status(500).json({error:err});}});server.get('/api/verify/:token/:email',function(req,res){var _req$params=req.params,token=_req$params.token,email=_req$params.email;var user=db.get('users').find({email:email}).value();if(user){if(user.isVerified){return res.status(202).json({ok:'Email Already Verified'});}else{var foundToken=db.get('tokens').find({email:email,token:token}).value();if(foundToken){db.get('users').find({email:email}).assign({isVerified:true}).write();db.get('tokens').remove({email:email,token:token}).write();return res.redirect(301,domain+"?u="+email+"&verified=1");}else{return res.status(404).json({error:'Token expired'});}}}else{return res.status(404).json({error:'Email not found'});}});server.post('/api/login',function(req,res){var _req$body2=req.body,email=_req$body2.email,password=_req$body2.password;var user=db.get('users').find({email:email}).value();if(user){if(!user.isVerified){return res.status(401).json({error:'Unauthorized access. Account was not verified.'});}try{var result=_bcryptjs.default.compareSync(password,user.password);if(result){var JWTToken=_jsonwebtoken.default.sign({email:user.email},jwtSecretKey,{expiresIn:'2h'});return res.status(200).json({jwt:JWTToken});}return res.status(401).json({error:'Unauthorized access'});}catch(err){res.status(401).json({error:'Unauthorized access'});}}else{res.status(500).json({error:'User or password wrong'});}});server.use(function(req,res,next){if(req.user){next();}else{res.status(500).json({error:'Unauthorized access'});}});server.get('/api/list/:locale',function _callee2(req,res){var patch,locale,songs;return _regenerator.default.async(function _callee2$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return _regenerator.default.awrap(readLocalePatch());case 2:patch=_context4.sent;locale=req.params.locale;songs=_FolderSongs.default.getSongsMeta(locale,patch);res.json(songs);case 6:case"end":return _context4.stop();}}});});server.get('/api/song/:key/:locale',function _callee3(req,res){var patch,_req$params2,key,locale,songs,song;return _regenerator.default.async(function _callee3$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.next=2;return _regenerator.default.awrap(readLocalePatch());case 2:patch=_context5.sent;_req$params2=req.params,key=_req$params2.key,locale=_req$params2.locale;songs=_FolderSongs.default.getSongsMeta(locale,patch);song=songs.find(function(s){return s.key===key;});if(!song){_context5.next=10;break;}_context5.next=9;return _regenerator.default.awrap(_FolderSongs.default.loadSingleSong(locale,song,patch));case 9:res.json(song);case 10:case"end":return _context5.stop();}}});});server.delete('/api/song/:key/:locale',function _callee4(req,res){var patchObj,_req$params3,key,locale;return _regenerator.default.async(function _callee4$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:_context6.next=2;return _regenerator.default.awrap(readLocalePatch());case 2:patchObj=_context6.sent;_req$params3=req.params,key=_req$params3.key,locale=_req$params3.locale;if(!patchObj)patchObj={};delete patchObj[key][locale];_context6.next=8;return _regenerator.default.awrap(saveLocalePatch(patchObj));case 8:console.log('Borrado patch',key);res.json({ok:true});case 10:case"end":return _context6.stop();}}});});server.post('/api/song/:key/:locale',function _callee5(req,res){var patchObj,_req$params4,key,locale,patch,localePatch,updatedPatch;return _regenerator.default.async(function _callee5$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:_context7.next=2;return _regenerator.default.awrap(readLocalePatch());case 2:patchObj=_context7.sent;_req$params4=req.params,key=_req$params4.key,locale=_req$params4.locale;patch=req.body;if(!patchObj)patchObj={};if(patch.rename){patch.rename=patch.rename.trim();}patch.author=req.user.email;localePatch=(0,_defineProperty2.default)({},locale,patch);if(!patchObj[key]){patchObj[key]={};}updatedPatch=merge(patchObj[key],localePatch);patchObj[key]=updatedPatch;_context7.next=14;return _regenerator.default.awrap(saveLocalePatch(patchObj));case 14:console.log('Guardado patch',key,updatedPatch);res.json({ok:true});case 16:case"end":return _context7.stop();}}});});require('http').createServer(server).listen(process.env.PORT,function(){console.log('Http on port',process.env.PORT);});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,